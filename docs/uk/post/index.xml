<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Основи Cocos2d-x</title>
    <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/</link>
    <description>Recent content in Posts on Основи Cocos2d-x</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© суспільне надбання</copyright>
    <lastBuildDate>Fri, 03 Apr 2020 13:30:25 +0300</lastBuildDate>
    
	<atom:link href="https://beardog-ukr.github.io/cocos2dx-examples/uk/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Видалення об&#39;єктів</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/memory-actions/</link>
      <pubDate>Fri, 03 Apr 2020 13:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/memory-actions/</guid>
      <description>&lt;p&gt;Тепер, після того, як ми &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-actions/&#34;&gt;ознайомились з Action&lt;/a&gt; та &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-actions/&#34;&gt;іншими базовими термінами&lt;/a&gt;, можна розбиратись з проблемою коректного видалення об&#39;єктів, створених Cocos2d.&lt;/p&gt;
&lt;p&gt;Для того, щоб це проілюструвати, напишемо просту сцену, у якій буде один спрайт і одна кнопка. Після натиснення на кнопку спрайт буде переміщуватись за межі екрану і там якось видалятиметься.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Складніша робота з CC_CALLBACK</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/advanced-callbacks/</link>
      <pubDate>Fri, 03 Apr 2020 13:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/advanced-callbacks/</guid>
      <description>&lt;p&gt;У попередній &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/post/events-callbacks/&#34;&gt;статті про колбеки&lt;/a&gt; було сказано, що цифра у назві макросу &lt;code&gt;CC_CALLBACK_&lt;/code&gt; задає кількість параметрів, які отримає відповідна функція. Це не зовсім правильно, магія C++ дозволяє зробити з колбеком ще один цікавий фокус.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Складніша робота з об&#39;єктами</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/advanced-actions/</link>
      <pubDate>Thu, 02 Apr 2020 15:55:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/advanced-actions/</guid>
      <description>&lt;p&gt;У &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-actions/&#34;&gt;попередній статті&lt;/a&gt; було показано, як за допомогою &lt;a href=&#34;https://docs.cocos2d-x.org/api-ref/cplusplus/v4x/db/d61/classcocos2d_1_1_action.html&#34;&gt;Action&lt;/a&gt; можна ініціювати рух та інші перетворення об&#39;єктів. Зараз ми продовжимо роботу цьому напрямі, розглядаючи складніші сценарії.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Розмір екрану</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/screen-resolution-01/</link>
      <pubDate>Mon, 30 Mar 2020 22:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/screen-resolution-01/</guid>
      <description>&lt;p&gt;У попередніх постах було розказано, як створити дефолтну програму і з чого вона складається. Тепер можна переходити до написання власного проекту, але перед тим залишився ще один маленький нюанс — розмір екрану.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Послідовності</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-sequence/</link>
      <pubDate>Sun, 29 Mar 2020 21:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-sequence/</guid>
      <description>&lt;p&gt;Якщо вам потрібно виконати кілька акцій одну за одною, на допомогу прийде клас &lt;a href=&#34;https://docs.cocos2d-x.org/cocos2d-x/v4/en/actions/sequences.html&#34;&gt;Sequence&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Наприклад, синій корабель за помовчанням створюється &amp;ldquo;носом доверху&amp;rdquo;. Щоб зобразити його &amp;ldquo;переліт&amp;rdquo; направо, спочатку треба зробити поворот на 90 градусів, а вже потім переміщувати.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Анімація</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-animations/</link>
      <pubDate>Sun, 29 Mar 2020 17:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-animations/</guid>
      <description>&lt;p&gt;Ще одним способом створення &amp;ldquo;живого&amp;rdquo; об&#39;єкту є анімація. Художники малюють ряд кадрів, а Cocos2d їх послідовно показує, використовуючи клас &lt;a href=&#34;https://docs.cocos2d-x.org/api-ref/cplusplus/v4x/d3/dc5/classcocos2d_1_1_animation.html&#34;&gt;Animation&lt;/a&gt;. Робота з ним схожа на інші акції, хоча сам клас має трошки інше походження.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Рух та інші перетворення об&#39;єктів</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-actions/</link>
      <pubDate>Sun, 29 Mar 2020 15:55:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-actions/</guid>
      <description>&lt;p&gt;Ми вже вміємо обробляти події клавіатури або натискання на кнопки. Тепер треба починати реагувати на ці події та щось зробити з об&#39;єктом.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Обробка клавіатури</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/keyboard-processing/</link>
      <pubDate>Fri, 27 Mar 2020 19:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/keyboard-processing/</guid>
      <description>&lt;p&gt;Ще одним прикладом використання макросу &lt;code&gt;CC_CALLBACK&lt;/code&gt; може бути робота з клавіатурою.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Обробка подій та колбеки</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/events-callbacks/</link>
      <pubDate>Thu, 26 Mar 2020 17:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/events-callbacks/</guid>
      <description>&lt;p&gt;У дефолній програмі, яку було створено у &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/first-steps.md&#34;&gt;перших постах&lt;/a&gt;, залишився без пояснення ще один момент — це кнопка, за допомогою якої ця програма закривалась.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Використання Sprite</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/static-img-practice-app/</link>
      <pubDate>Mon, 23 Mar 2020 22:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/static-img-practice-app/</guid>
      <description>&lt;p&gt;У цьому пості ми спробуємо створити першу власноруч написану програму. Поки що вона не буде нічого робити, ми просто візьмемо кілька зображеннь космічних кораблів з &lt;a href=&#34;https://www.kenney.nl/assets/space-shooter-redux&#34;&gt;безкоштовного набору&lt;/a&gt; та покажемо їх на екрані. Основна мета — навчитись працювати з класом &lt;a href=&#34;https://docs.cocos2d-x.org/api-ref/cplusplus/v4x/d3/d5c/classcocos2d_1_1_sprite.html&#34;&gt;Sprite&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Основні терміни Cocos2d-x</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-things/</link>
      <pubDate>Mon, 23 Mar 2020 17:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/basic-things/</guid>
      <description>&lt;p&gt;У попередніх постах мова йшла про те, як створити базовий проект програми у Cocos2d-x. Точніше, той проект створювався автоматично скриптом &lt;em&gt;cocos&lt;/em&gt;, потрібно було його лише скомпілювати та запустити.&lt;/p&gt;
&lt;p&gt;Цього разу я розкажу про основні терміни, поняття та класи фреймворку, а також поясню, як вони використовуються у тому базовому проекті.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Структура проекту</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/project-structure/</link>
      <pubDate>Sun, 22 Mar 2020 21:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/project-structure/</guid>
      <description>&lt;p&gt;Не знаю, чи помітили ви, але навіть елементарний тестовий проект (такий, як було створено у &lt;a href=&#34;https://beardog-ukr.github.io/cocos2dx-examples/uk/post/first-steps/&#34;&gt;початковій статті&lt;/a&gt;) займає досить багато місця — триста мегабайт до початку компіляції та більше п&#39;ятисот після. У старіших версіях фреймворку ситуація була ще гірше — невелика гра в процесі розробки займала майже гігабайт. Насправді, воно не так вже й важливо, але коли у вас багато тестових проектів, місце раптом закінчується.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Джерела інформації</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/info_sources/</link>
      <pubDate>Sun, 22 Mar 2020 11:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/info_sources/</guid>
      <description>&lt;p&gt;Документації по Cocos2d-x порівняно небагато, але досить для вивчення. Проблема в тому, що у більшості випадків вона застаріла, тому доведеться співвідносити написане і реальний стан речей.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Знайомство</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/first-steps/</link>
      <pubDate>Sat, 21 Mar 2020 17:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/first-steps/</guid>
      <description>&lt;p&gt;Cocos2d-x — це фреймворк для створення кросплатформенних 2d-ігор на C++. З ним можна створювати відносно прості ігри типу Flappy Bird abo Fruit Ninja, а також більш складні сайд-скроллери та навіть стратегії.&lt;/p&gt;
&lt;p&gt;Перебування на карантині можна розглядати як привід вивчити щось нове, тому я спробую зробити серію постів, що описують основи цього &lt;a href=&#34;https://uk.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BD%D0%B8%D0%B9_%D0%BA%D0%B0%D1%80%D0%BA%D0%B0%D1%81&#34;&gt;програмного каркасу&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Корисні поради по imagemagick</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/useful-imagemagick/</link>
      <pubDate>Sun, 29 Sep 2019 04:25:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/useful-imagemagick/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://imagemagick.org/index.php&#34;&gt;imagemagick&lt;/a&gt; — консольна програма для обробки зображень.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>