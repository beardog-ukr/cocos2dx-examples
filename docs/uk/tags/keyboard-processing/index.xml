<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>keyboard processing on Основи Cocos2d-x</title>
    <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/tags/keyboard-processing/</link>
    <description>Recent content in keyboard processing on Основи Cocos2d-x</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© суспільне надбання</copyright>
    <lastBuildDate>Fri, 27 Mar 2020 19:30:25 +0300</lastBuildDate>
    
	<atom:link href="https://beardog-ukr.github.io/cocos2dx-examples/uk/tags/keyboard-processing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Обробка клавіатури</title>
      <link>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/keyboard-processing/</link>
      <pubDate>Fri, 27 Mar 2020 19:30:25 +0300</pubDate>
      
      <guid>https://beardog-ukr.github.io/cocos2dx-examples/uk/post/keyboard-processing/</guid>
      <description>Ще одним прикладом використання макросу CC_CALLBACK може бути робота з клавіатурою.
Для того, щоб додати у програму можливість обробки клавіатури, в init сцени треба додати такий код:
// keyboard processing EventListenerKeyboard* sceneKeyboardListener = EventListenerKeyboard::create(); sceneKeyboardListener-&amp;gt;onKeyPressed = CC_CALLBACK_2(ActionsDemoScene::onKeyPressedScene, this); _eventDispatcher-&amp;gt;addEventListenerWithSceneGraphPriority(sceneKeyboardListener, this); при цьому сама обробка натискання може виглядати так:
void ActionsDemoScene::onKeyPressedScene(EventKeyboard::KeyCode keyCode, Event *event) { printf(&amp;#34;%s: processing key %d pressed\n&amp;#34;, __func__, (int)keyCode); if (EventKeyboard::KeyCode::KEY_A == keyCode) { printf(&amp;#34;%s: key &amp;#39;a&amp;#39; was pressed\n&amp;#34;, __func__); } else { printf(&amp;#34;%s: failed to process.</description>
    </item>
    
  </channel>
</rss>